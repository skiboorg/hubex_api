# Generated by Django 4.2.1 on 2023-09-26 06:25

import colorfield.fields
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CheckList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'verbose_name': 'Чеклисты',
                'verbose_name_plural': 'Чеклисты',
            },
        ),
        migrations.CreateModel(
            name='CheckListData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', models.JSONField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='CheckListInput',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_num', models.IntegerField(blank=True, default=1)),
                ('label', models.CharField(blank=True, max_length=255, null=True)),
                ('labels', models.CharField(blank=True, max_length=255, null=True)),
                ('input_data', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'ordering': ('order_num',),
            },
        ),
        migrations.CreateModel(
            name='CheckListTable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('default_data', models.JSONField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Таблицы в чеклисте',
                'verbose_name_plural': 'Таблицы в чеклисте',
            },
        ),
        migrations.CreateModel(
            name='CheckListTableData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', models.JSONField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='CheckListTableInput',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_num', models.IntegerField(blank=True, default=1)),
                ('label', models.CharField(blank=True, max_length=255, null=True)),
                ('value', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'ordering': ('order_num',),
            },
        ),
        migrations.CreateModel(
            name='CheckListTableInputField',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('is_boolean', models.BooleanField(default=False, null=True)),
                ('is_input', models.BooleanField(default=False, null=True)),
            ],
            options={
                'verbose_name': 'Тип ввода таблицы в чеклисте',
                'verbose_name_plural': 'Тип ввода таблицы в чеклисте',
            },
        ),
        migrations.CreateModel(
            name='InputField',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('is_boolean', models.BooleanField(default=False, null=True)),
                ('is_boolean_with_input', models.BooleanField(default=False, null=True)),
                ('is_multiple_boolean', models.BooleanField(default=False, null=True)),
                ('is_multiple_boolean_with_input', models.BooleanField(default=False, null=True)),
                ('is_input', models.BooleanField(default=False, null=True)),
                ('is_separator', models.BooleanField(default=False, null=True)),
            ],
            options={
                'verbose_name': 'Тип ввода чеклиста',
                'verbose_name_plural': 'Тип ввода чеклиста',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4)),
                ('number', models.CharField(blank=True, max_length=255, null=True)),
                ('is_critical', models.BooleanField(blank=True, default=False)),
                ('comment', models.TextField(blank=True, null=True)),
                ('date_created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('date_assign_worker', models.DateField(blank=True, null=True)),
                ('date_done', models.DateField(blank=True, null=True)),
                ('date_dead_line', models.DateField(blank=True, null=True)),
                ('is_done', models.BooleanField(blank=True, default=False)),
                ('is_time_left', models.BooleanField(blank=True, default=False)),
                ('is_order_for_additional_equipment', models.BooleanField(blank=True, default=False)),
                ('is_created_by_client', models.BooleanField(blank=True, default=False)),
            ],
            options={
                'verbose_name': 'Заявка',
                'verbose_name_plural': 'Заявки',
                'ordering': ('-is_critical', '-date_created_at', 'is_done'),
            },
        ),
        migrations.CreateModel(
            name='OrderFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(blank=True, null=True, upload_to='order/files')),
                ('text', models.CharField(blank=True, max_length=255, null=True)),
                ('size', models.CharField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Stage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('is_default', models.BooleanField(default=False, null=True)),
                ('need_add_user', models.BooleanField(default=False, null=True)),
                ('is_add_user_required', models.BooleanField(default=False, null=True)),
                ('add_user_role_btn_label', models.CharField(blank=True, max_length=255, null=True)),
                ('btn_1_label', models.CharField(blank=True, max_length=255, null=True)),
                ('btn_2_label', models.CharField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='StageFirmSelect',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Status',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('bg_color', colorfield.fields.ColorField(default='#FF0000', image_field=None, max_length=18, samples=None)),
                ('text_color', colorfield.fields.ColorField(default='#FFFFFF', image_field=None, max_length=18, samples=None)),
                ('is_default', models.BooleanField(default=False, null=True)),
                ('is_done', models.BooleanField(blank=True, default=False)),
            ],
            options={
                'verbose_name': 'Статус ',
                'verbose_name_plural': 'Статус ',
            },
        ),
        migrations.CreateModel(
            name='Type',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('is_default', models.BooleanField(default=False, null=True)),
            ],
            options={
                'verbose_name': 'Тип заявки',
                'verbose_name_plural': 'Тип заявки',
            },
        ),
        migrations.CreateModel(
            name='WorkType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('is_default', models.BooleanField(default=False, null=True)),
            ],
            options={
                'verbose_name': 'Тип работ',
                'verbose_name_plural': 'Тип работ',
            },
        ),
        migrations.CreateModel(
            name='StageLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('new_stage', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='order.stage')),
                ('order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='stage_logs', to='order.order')),
            ],
        ),
    ]
